spring:
  datasource:
    url: ${env.DATABASE_LOCAL_URL}
    username: ${env.DATABASE_LOCAL_USERNAME}
    password: ${env.DATABASE_LOCAL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate.ddl-auto: update
    generate-ddl: true
    hibernate:
      ddl-auto: update
    #    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${env.GOOGLE_CLIENT_ID}
            clientSecret: ${env.GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
  servlet:
    multipart:
      max-file-size: 10000MB
      max-request-size: 10000MB
  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: 'true'
          auth: 'true'
    host: smtp.gmail.com
    username: ${env.EMAIL_USERNAME}
    password: ${env.EMAIL_PASSWORD}
    port: '587'
app:
  auth:
    secretKey: ${env.JWT_SECRETKEY}
    tokenExpiration: 86400000 # a day
    refreshTokenExpiration: 604800000 # 7 days
  cors:
    allowedOrigins: "http://localhost:3000,https://birdstore2nd.vercel.app,https://www.birdland2nd.store"
    allowedMethods: "*"
    allowedHeaders: "*"
    exposedHeaders: "*"
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - https://birdstore2nd.vercel.app
      - https://birdland2nd.store
  aws:
    accessKey: ${env.S3_ACCESS_KEY}
    secretKey: ${env.S3_SECRET_KEY}

  email:
    username: tienphambmt2911@gmail.com
    verifyLink: "https://thongtienthienphuot.shop/api/v1/users/verify/"